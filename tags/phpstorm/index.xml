<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Phpstorm on Zielony Buszmen</title>
    <link>https://zielonybuszmen.github.io/tags/phpstorm/</link>
    <description>Recent content in Phpstorm on Zielony Buszmen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-pl</language>
    <managingEditor>youremail@domain.com (Zielony Buszmen)</managingEditor>
    <webMaster>youremail@domain.com (Zielony Buszmen)</webMaster>
    <lastBuildDate>Sun, 26 Feb 2017 17:06:36 +0000</lastBuildDate>
    
	<atom:link href="https://zielonybuszmen.github.io/tags/phpstorm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Laravel – testy jednostkowe w PHPStormie</title>
      <link>https://zielonybuszmen.github.io/2017/02/26/laravel-testy-jednostkowe-w-phpstormie/</link>
      <pubDate>Sun, 26 Feb 2017 17:06:36 +0000</pubDate>
      <author>youremail@domain.com (Zielony Buszmen)</author>
      <guid>https://zielonybuszmen.github.io/2017/02/26/laravel-testy-jednostkowe-w-phpstormie/</guid>
      <description>Krótki wpis, szybka porada &amp;#8211; jak uruchomić testy jednostkowe Laravela w PHPStorm?
Przechodzimy do Settings (Ctrl + Alt + S), klikamy Languages &amp;amp; Frameworks, następnie PHP i wybieramy PHPUnit.
W nowo otwartym oknie wybieramy Use Composer autoloader i jako ścieżkę podajemy plik /vendor/autoload.php, który znajduje się w naszym projekcie.
Testowanie Przechodzimy do /tests/ExampleTest.php i piszemy przykładowy test:
class ExampleTest extends TestCase { public function testTrueTest() { $this-&amp;amp;gt;assertTrue(true); } }  Aby uruchomić test, ustawiamy kursor w funkcji testTrueTest oraz wciskamy kombinacje klawiszy Ctrl + Shift + F10.</description>
    </item>
    
  </channel>
</rss>