<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on Zielony Buszmen</title>
    <link>https://zielonybuszmen.github.io/tags/c/</link>
    <description>Recent content in C# on Zielony Buszmen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-pl</language>
    <lastBuildDate>Mon, 20 Feb 2017 15:00:38 +0000</lastBuildDate>
    
	<atom:link href="https://zielonybuszmen.github.io/tags/c/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Binarne drzewo poszukiwań – Binary Search Tree (BST)</title>
      <link>https://zielonybuszmen.github.io/2017/02/20/binarne-drzewo-poszukiwan-binary-search-tree-bst/</link>
      <pubDate>Mon, 20 Feb 2017 15:00:38 +0000</pubDate>
      
      <guid>https://zielonybuszmen.github.io/2017/02/20/binarne-drzewo-poszukiwan-binary-search-tree-bst/</guid>
      <description>Drzewo to hierarchiczna struktura danych. Co to znaczy? Że do jego „obsługi” w kodzie będziemy musieli używać rekurencji (tej trudnej i nieciekawej). Na początku przyjrzymy się, jak to wszystko wygląda na obrazkach, dopiero potem zaimplementujemy naszą wiedzę w kodzie.
Drzewo składa się z węzłów (nodes). Każdy z nich posiada co najwyżej dwóch następników. Stąd też nazwa „binarne”, bo binarny to „dwójkowy” (zawierający dwa elementy). Drzewo posiada tzw. „węzeł nadrzędny” (root).</description>
    </item>
    
  </channel>
</rss>